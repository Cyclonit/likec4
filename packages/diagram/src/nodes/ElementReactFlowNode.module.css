.container {
  position: relative;
  width: 100%;
  height: 100%;

  :where(:global(.react-flow__node:focus-within)) & {
    /* border: 20px solid red; */
  }
}

.shapeSvg {
  top: 0px;
  left: 0px;
  /* width: 100%;
  height: 100%; */
  position: absolute;
  pointer-events: none;
  fill: var(--likec4-element-fill);
  stroke: var(--likec4-element-stroke);
  overflow: visible;

  /* box-shadow rgba(0, 0, 0, 0.05) 0px 1px 3px 0px, rgba(0, 0, 0, 0.05) 0px 20px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px
box-sizing border-box */

  --stroke-fill-color: color-mix(in srgb, var(--likec4-element-stroke) 70%, var(--likec4-element-fill));

  /* --shadow-color: color-mix(in srgb, var(--mantine-color-dark-light) 90%, var(--mantine-color-dark-filled)); */
  --shadow-color: rgba(0, 0, 0, 0.05);
  filter:
    drop-shadow(0px 2px 2px rgba(0, 0, 0, 0.15))
    drop-shadow(0px 20px 25px var(--shadow-color))
    drop-shadow(0px 10px 10px var(--shadow-color));
    /* drop-shadow(1px 1px 2px var(--shadow-color))
    drop-shadow(2px 10px 8px var(--shadow-color)); */

  /* :where(:global(.react-flow__node-element.selected)) & {
    --shadow-color: color-mix(in srgb, var(--mantine-color-dark-light) 60%, var(--mantine-color-dark-filled));
    filter:
      drop-shadow(-1px -1px 1px var(--shadow-color)) drop-shadow(1px 1px 1px var(--shadow-color))
  } */
}

.indicator {
  /* top: 0px;
  left: 0px;
  position: absolute;
  pointer-events: none;
  overflow: visible; */
  /* fill: var(--mantine-color-dark-0); */
  /* stroke: color-mix(in srgb, var(--likec4-element-stroke) 25%, var(--likec4-element-loContrast)); */
  stroke: var(--likec4-element-loContrast);
  transform-origin: center center;
  stroke-width: 6px;

  :where([data-likec4-shape='queue'], [data-likec4-shape='cylinder'], [data-likec4-shape='storage']) & {
    stroke-width: 10px;
  }

  animation-duration: 800ms;
  animation-name: indicator;
  animation-iteration-count: infinite;
  animation-direction: alternate;

  visibility: hidden;

  :where(:global(.react-flow__node.selected)) & {
    visibility: visible
  }
}

@keyframes indicator {
  from {
    opacity: 0.6;
  }

  to {
    opacity: 0.4;
  }
}

.element {
  position: relative;
  width: 100%;
  height: 100%;
  padding: rem(26px);
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: center;
  gap: rem(8px);


  &:has(.description):has(.technology) {
    gap: rem(6px);
  }

  :where([data-likec4-shape='queue'], [data-likec4-shape='mobile']) & {
    padding-left: rem(36px);
  }

  :where([data-likec4-shape='cylinder'], [data-likec4-shape='storage']) & {
    padding-top: rem(30px);
  }

  :where([data-likec4-shape='browser']) & {
    padding-top: rem(36px);
  }

  .title {
    text-align: center;
    font-weight: 500;
    font-size: rem(18px);
    line-height: 1.1;
    text-wrap: balance;
    pointer-events: all;
    color: var(--likec4-element-hiContrast);
  }

  .technology {
    font-weight: 300;
    font-size: rem(13px);
    line-height: 1;
    text-align: center;
    text-wrap: balance;
    color: var(--likec4-element-loContrast);

    &:has(+ .description) {
      margin-bottom: rem(2px);
    }
  }

  .description {
    font-weight: 400;
    font-size: rem(15px);
    line-height: 1.25;
    text-align: center;
    text-align: center;
    text-wrap: pretty;
    text-align: center;
    text-wrap: pretty;
    color: var(--likec4-element-loContrast);
    letter-spacing: -0.01em;
    text-wrap: pretty;
    white-space-collapse: preserve-breaks;
  }
}

.navigateBtn {
  z-index: calc(var(--layer-overlays) + 1);
  position: absolute;
  pointer-events: all;
  --ai-bg: transparent;
  left: 50%;
  bottom: 0px;
  transform: translate(-50%, 0);
  transform-origin: 50% 65%;
  opacity: 0.8;
  transition: all 175ms ease-out;
  transition-delay: 0ms;

  & > svg {
    width: 75%;
    height: 75%;
    stroke-width: 1.5;
  }

  :where([data-likec4-shape='browser']) & {
    bottom: 3px;
  }

}

.container {
  @mixin hover {
    & .navigateBtn {
      --ai-bg: color-mix(in srgb, var(--likec4-element-fill) 65%, var(--likec4-element-stroke));
      box-shadow: var(--mantine-shadow-lg);
      transform: translate(-50%, 0) scale(1.35);
      opacity: 1;
      transition-delay: 120ms;

      @mixin hover {
        --ai-hover: color-mix(in srgb, var(--likec4-element-fill) 50%, var(--likec4-element-stroke));
        transform: translate(-50%, 0) scale(1.42);
        transition-delay: 0ms;
      }
    }
  }
}
