name: docs

on:
  workflow_call:
  workflow_dispatch:

permissions:
  actions: write
  contents: read
  checks: write
  statuses: write
  deployments: write

env:
  NODE_ENV: production

concurrency:
  group: docs-website-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build-docs:
    name: build docs
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Bootstrap
        uses: ./.github/actions/bootstrap

      - name: Turborepo-cache
        uses: dtinth/setup-github-actions-caching-for-turbo@v1

      - name: Docs NextJS Cache
        uses: actions/cache@v3
        with:
          path: |
            docs/.next/cache
            node_modules/nextra/dist/__temp__
          key: ${{ runner.os }}-docs-${{ hashFiles('yarn.lock') }}-${{ hashFiles('docs/**/*') }}
          restore-keys: |
            ${{ runner.os }}-docs-${{ hashFiles('yarn.lock') }}-
            ${{ runner.os }}-docs-

      - name: Prebuild dependencies
        run: yarn turbo run build --filter='docs-website^...'

      - name: Build NextJS
        working-directory: docs
        run: |
          yarn generate
          yarn build
          
      - name: upload a build artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs-website
          path: docs/out/
          
  deploy-preview:
    name: preview
    runs-on: ubuntu-latest
    needs: build-docs
    timeout-minutes: 10
    environment: preview
    steps: 

      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs-website

      - name: publish to cloudflare
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: likec4-docs
          branch: preview
          wranglerVersion: '3'

  deploy-production:
    name: production
    runs-on: ubuntu-latest
    needs: deploy-preview
    timeout-minutes: 10
    environment: production
    if: "github.ref == 'refs/heads/main'"
    steps:  

      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs-website

      - name: publish to cloudflare
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: likec4-docs
          branch: main
          wranglerVersion: '3'
