name: docs

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      preview_url:
        description: "deployment url for preview"
        value: ${{ jobs.deploy-docs-preview.outputs.url }}
      production_url:
        description: "deployment url for production"
        value: ${{ jobs.deploy-docs-prod.outputs.url }}
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deploy to'
        required: true
        default: 'preview'
        type: choice
        options:
        - preview
        - production

permissions:
  actions: write
  contents: read
  checks: write
  statuses: write
  deployments: write

env:
  NODE_ENV: production
  TURBO_CACHE_DIR: ${{ github.workspace }}/.turbo

concurrency:
  group: docs-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build-docs:
    name: build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: bootstrap
        uses: ./.github/actions/bootstrap

      - name: build
        run: |
          yarn turbo run build --filter='@likec4/docs-astro'

      - name: upload a build artifact
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        with:
          name: docs-astro
          if-no-files-found: error
          path: apps/docs/dist/

  deploy-docs-preview:
    # Deploy to Preview
    # - we are in a workflow_call and the commit message does not contain 'chore: release'
    # - we are in workflow_dispatch not on main branch
    if: "github.event_name == 'workflow_dispatch' && inputs.environment == 'preview' || github.event_name == 'workflow_call'"
    name: deploy preview
    runs-on: ubuntu-latest
    needs: build-docs
    timeout-minutes: 10
    environment:
      name: 'docs-preview'
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          ref: ${{ github.ref }}

      - name: setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: docs-astro
          path: apps/docs/dist/

      - id: cloudflare
        name: publish to cloudflare
        uses: cloudflare/wrangler-action@a08dc762e87e8754e0d56a16a35a70b406bc869f # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name likec4-docs-astro --commit-dirty --branch preview
          workingDirectory: apps/docs
          packageManager: yarn

  deploy-docs-prod:
    # Deploy to Prod
    # - we are in a workflow_call on main branch and the commit message contains 'chore: release'
    # - we are in workflow_dispatch on main branch
    if: "github.event_name == 'workflow_dispatch' && inputs.environment == 'production' || (github.event_name == 'workflow_call' && contains(github.event.head_commit.message, 'chore: release'))"
    name: deploy prod
    runs-on: ubuntu-latest
    needs: build-docs
    timeout-minutes: 10
    environment:
      name: 'docs-prod'
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    outputs:
      url: ${{ steps.cloudflare.outputs.deployment-url }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          ref: ${{ github.ref }}

      - name: setup Node.js
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: download artifact
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: docs-astro
          path: apps/docs/dist/

      - id: cloudflare
        name: publish to cloudflare
        uses: cloudflare/wrangler-action@a08dc762e87e8754e0d56a16a35a70b406bc869f # v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name likec4-docs-astro --commit-dirty --branch main
          workingDirectory: apps/docs
          packageManager: yarn
