name: Build and Test

on:
  pull_request:
  push:
    tags-ignore:
      - "**"
    branches-ignore:
      - "main"
      - "releases/*"

concurrency:
  group:  ${{ github.workflow }}-${{github.event_name}}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: production

jobs:
  build:
    # If on pull request, run only if coming from forked repos
    if: |
      !contains(github.event.head_commit.message, 'ci skip') && (
        github.event_name == 'push' || github.event.pull_request.head.repo.fork
      )
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os: [windows-latest, ubuntu-latest]
        node-version: ['18', '20']
        include:

          - os: ubuntu-latest
            node-version: '20'
            build-docs: true

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # - name: yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: restore caches
        uses: actions/cache/restore@v3
        with:
          path: '.yarn/cache'
          key: yarn-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
          enableCrossOsArchive: true
          restore-keys: |
            yarn-${{ runner.os }}-
            yarn-

      - name: install dependencies
        shell: bash
        run: yarn install --immutable

      - name: Build
        run: yarn ci:build

      - name: TypeCheck
        run: yarn typecheck

      - name: Test
        run: yarn test

      - if: ${{ matrix.build-docs }}
        name: Build Docs
        working-directory: docs
        run: yarn build:turbo
